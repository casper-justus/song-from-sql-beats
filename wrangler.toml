# wrangler.toml
name = "shit" # Your project name
compatibility_date = "2024-05-29" # Moved to top level

# Define the root of your Pages Functions.
# If your functions are in 'src/functions' or a similar structure, adjust this.
# For Cloudflare Pages, typically you'd have a 'functions' directory at the root
# of your build output (e.g., dist/functions) or a '_worker.js' file in dist.
# Wrangler Pages dev/deploy will look for this automatically.
# You generally don't need 'main' unless you have a standalone Worker.

# Bindings for your Pages Functions
[[r2_buckets]]
binding = "R2_MUSIC_BUCKET"
bucket_name = "music" # The actual name of your R2 bucket

# Environment variables for your Pages Functions
[vars]
SUPABASE_PROJECT_ID = "dqckopgetuodqhgnhhxw"

# If you have specific Worker-like settings for your Pages Functions,
# you might use a [build] section, but for basic setup, it's often not needed.
# [build]
# command = "npm run build" # Example: This would be the command to build your entire project
# cwd = "./"

# Important for Pages: The directory containing your static assets
# This is usually handled by the `wrangler pages deploy <directory>` command
# or implicitly by `wrangler pages dev -- <command>`.
# In modern Pages setup, you often don't explicitly set pages_build_output_dir in the TOML itself
# because the CLI commands handle it.
# However, for clarity or specific scenarios, if you need to set it, it would be part of a
# build or deployment configuration, not a top-level `[pages]` section.
# The previous `pages_build_output_dir = "./dist"` was correct for the *command-line* parameter
# or an older TOML format.
